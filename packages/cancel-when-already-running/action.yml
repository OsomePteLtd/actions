# action.yml
name: 'Cancel when already running'
description: 'Cancel when already running'

inputs:
  token:
    required: true
    description: 'Github Token'
  repo:
    required: true
    description: 'Repository Name'
  deployEnv:
    required: true
    description: 'GH Deployment Environment'
  runNumber:
    required: true
    description: 'GH A unique number for each run of a particular workflow in a repository'

runs:
  using: 'composite'
  steps:
    - name: Cancel when already running
      id: skip
      run: |
        if [ "${{ inputs.deployEnv }}" = "stage" ]; then
          echo "Waiting when Github is changed Deploy workflow status"
          sleep 10
          environment="stage"
        elif [ "${{ inputs.deployEnv }}" = "production" ]; then
          environment="production"
        fi

        workflows=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ inputs.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/OsomePteLtd/${{ inputs.repo }}/actions/runs?event=deployment&status=in_progress" | jq -r ".workflow_runs | .[]")
        if [ -n "$workflows" ]; then
          echo $workflows | jq -rc '.name + " " + .status + " " + .display_title + " " + (.run_number|tostring)' |
          while read -r name status env runNumber; do
            if [ "$name" = "Deploy" ] && [ "$status" = "in_progress" ] && [ "$env" = "$environment" ] && [ "$runNumber" != "${{ inputs.runNumber }}" ]; then
              echo "$name -> $status -> $env -> $runNumber" 
              echo "Workflow with the same name already running"
              echo "cancel=true" >> $GITHUB_ENV
            fi
          done
        fi
      shell: bash

    - name: cancelling
      if: ${{ env.cancel == 'true' }}
      uses: andymckay/cancel-action@0.3
      with:
        token: ${{ inputs.token }}

    - name: wait for run cancellation
      if: ${{ env.cancel == 'true' }}
      run: while true; do echo "Waiting for job to be cancelled"; sleep 5; done
      shell: bash
